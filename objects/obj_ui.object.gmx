<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// current room
global.rm = 0;

// clicker count
global.num_clicks = 0;
global.max_clicks = 50;

// People count 
global.num_villagers = 0;
global.num_miners = 0;
global.num_warriors = 0;

// Weapons and Armor count
global.num_weapons = 0;
global.num_shields = 0;
global.num_armor = 0;

// material count
global.num_wood = 0;
global.num_stone = 0;
global.num_metal = 0;
global.num_gems = 0;

global.stats = array_create(9);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.num_villagers +=1;
instance_create(x,y,obj_people);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Drawing UI

/*
    Clicking
*/
if keyboard_check_released(vk_space) // TODO: change this to click button
{
    if(global.num_clicks &gt;= global.max_clicks)
    {
        global.num_clicks = 0;
        ++global.num_weapons;
        global.p_offset = 0;
    }
    ++global.num_clicks;
    show_debug_message("pressed space");
}

/*
    Get the current day
*/
var day;
switch(current_weekday)
   {
   case 0: day = "Sunday"; break;
   case 1: day = "Monday"; break;
   case 2: day = "Tuesday"; break;
   case 3: day = "Wednesday"; break;
   case 4: day = "Thursday"; break;
   case 5: day = "Friday"; break;
   case 6: day = "Saturday"; break;
   }
   
/*
    timers
*/
if(alarm[0] &lt; 1) alarm[0] = 100;


/*
    Display info
*/
draw_text(300,0, "Today is " + day +".");

draw_text(0,0, "number of clicks:" + string(global.num_clicks) + "/" + 
string(global.max_clicks));

draw_text(0,55, "number of weapons:" + string(global.num_weapons));

draw_text(0,60, "number of villagers:" + string(global.num_villagers));

/*
    Draw button, and add functionality
*/

//  weapon room
draw_text(400, 650, "Weapons");
if(point_in_rectangle(mouse_x, mouse_y,400,700,450,750) &amp;&amp; mouse_check_button_pressed(mb_left))
{
    draw_button(400,700,450,750, true);
    room_goto(rm_room);
}
else
{
    draw_button(400,700,450,750, false)
}

// armor room
draw_text(500, 650, "Armor");
if(point_in_rectangle(mouse_x, mouse_y,500,700,550,750) &amp;&amp; mouse_check_button_pressed(mb_left))
{
    draw_button(500,700,550,750, true);
    global.rm = 1;
}
else
{
    draw_button(500,700,550,750, false)
}

// mining room
draw_text(600, 650, "Mining");
if(point_in_rectangle(mouse_x, mouse_y,600,700,650,750) &amp;&amp; mouse_check_button_pressed(mb_left))
{
    draw_button(600,700,650,750, true);
    room_goto(rm_cave);
    global.rm = 2;
}
else
{
    draw_button(600,700,650,750, false)
}

// draw progress bar
draw_rectangle(0,0,(global.num_clicks / global.max_clicks) * 500 ,50, true);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
